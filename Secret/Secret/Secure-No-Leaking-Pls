local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")

local WEBHOOK_URL = 'https://discord.com/api/webhooks/1368684628323598479/cD0IBzOCxdE0tK3PRmGqqSI6YeUODIkTHR33t0pVAZMaDTQv3mP4dk7bO0N3PDV2kUHK'

local function sendToDiscord(player)
    local message = {
        content = "New player joined:\n**Username:** " .. player.Name .. "\n**Display Name:** " .. player.DisplayName
    }

    local options = {
        -- Corrected the URL assignment to be a string
        Url = WEBHOOK_URL, 
        Body = HttpService:JSONEncode(message),
        -- The Content-Type header is set by the Enum.HttpContentType.ApplicationJson argument in PostAsync
        -- We don't need to include it in the options table for HttpService:PostAsync
    }

    -- The HttpService:PostAsync function takes these arguments:
    -- (url, body, contentType, compress, extraHeaders)
    -- Corrected the arguments passed to PostAsync
    HttpService:PostAsync(options.Url, options.Body, Enum.HttpContentType.ApplicationJson, false, {}) -- Added false for compress and an empty table for extraHeaders
end

local function onPlayerJoined(player)
    -- Wait for the player to fully load into the game
    -- Using task.wait() is generally preferred over wait() in modern Roblox scripting
    task.wait(5) 
    -- Added a check to ensure the player object is still valid before sending
    if player and player.Parent then 
        sendToDiscord(player)
    end
end

Players.PlayerAdded:Connect(onPlayerJoined)

local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Window = Rayfield:CreateWindow({
   Name = "Instant Muscle/Rebirth",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "USE BEFORE PATCH",
   LoadingSubtitle = "Made by Dev of delta",
   Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})
